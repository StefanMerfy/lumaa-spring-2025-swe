{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Documents\\\\FullStackChallenge\\\\frontend\\\\src\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [editedDescription, setEditedDescription] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (userId) {\n      fetchTasks();\n    }\n  }, [userId]);\n  const handleAuth = async endpoint => {\n    try {\n      const response = await fetch(`http://localhost:3000/${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) throw new Error(`${endpoint} failed`);\n      const data = await response.json();\n      setUserId(data.userId);\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      console.log(\"Fetching tasks for user:\", userId);\n      const response = await fetch(`http://localhost:3000/tasks/${userId}`);\n      console.log(\"Response status:\", response.status);\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n      setTasks(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          title: newTitle,\n          description: newDescription\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add task');\n      setNewTitle('');\n      setNewDescription('');\n      fetchTasks();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete task');\n      setTasks(tasks.filter(task => task.taskid !== taskId));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const toggleTaskCompletion = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/tasks/${taskId}/toggle`, {\n        method: 'PATCH'\n      });\n      if (!response.ok) throw new Error('Failed to toggle task completion');\n      fetchTasks(); // Refresh the task list after toggling\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const editTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: editedTitle,\n          description: editedDescription\n        })\n      });\n      if (!response.ok) throw new Error('Failed to update task');\n      setEditingTaskId(null); // Exit editing mode\n      fetchTasks(); // Refresh the task list after editing\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const startEditing = task => {\n    setEditingTaskId(task.taskid);\n    setEditedTitle(task.title);\n    setEditedDescription(task.description);\n  };\n  const cancelEdit = () => {\n    setEditingTaskId(null);\n    setEditedTitle('');\n    setEditedDescription('');\n  };\n  if (userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: newDescription,\n          onChange: e => setNewDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '60px'\n          },\n          children: editingTaskId === task.taskid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedTitle,\n              onChange: e => setEditedTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedDescription,\n              onChange: e => setEditedDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask(task.taskid),\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEdit,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(task.taskid),\n              children: task.completed ? 'Undo' : 'Complete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.taskid),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 37\n          }, this)\n        }, task.taskid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tasks found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In / Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuth('login'),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuth('register'),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"kbFthfMca/PM29hxuRPXedFPcok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","userId","setUserId","username","setUsername","password","setPassword","tasks","setTasks","newTitle","setNewTitle","newDescription","setNewDescription","editingTaskId","setEditingTaskId","editedTitle","setEditedTitle","editedDescription","setEditedDescription","error","setError","fetchTasks","handleAuth","endpoint","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","console","log","status","addTask","title","description","deleteTask","taskId","filter","task","taskid","toggleTaskCompletion","editTask","startEditing","cancelEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","style","marginBottom","completed","color","_c","$RefreshReg$"],"sources":["C:/Users/Stefan/Documents/FullStackChallenge/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst App: React.FC = () => {\r\n    const [userId, setUserId] = useState<number | null>(null);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [tasks, setTasks] = useState<{ taskid: number; title: string; description: string; completed: boolean }[]>([]);\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\r\n    const [editedTitle, setEditedTitle] = useState('');\r\n    const [editedDescription, setEditedDescription] = useState('');\r\n    const [error, setError] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchTasks();\r\n        }\r\n    }, [userId]);\r\n\r\n    const handleAuth = async (endpoint: string) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/${endpoint}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password })\r\n            });\r\n            \r\n            if (!response.ok) throw new Error(`${endpoint} failed`);\r\n            \r\n            const data = await response.json();\r\n            setUserId(data.userId);\r\n            setError('');\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            console.log(\"Fetching tasks for user:\", userId);\r\n            const response = await fetch(`http://localhost:3000/tasks/${userId}`);\r\n            console.log(\"Response status:\", response.status);\r\n            if (!response.ok) throw new Error('Failed to fetch tasks');\r\n            const data = await response.json();\r\n            console.log(\"Fetched tasks:\", data);\r\n            setTasks(data);\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    \r\n\r\n    const addTask = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/tasks', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userId, title: newTitle, description: newDescription })\r\n            });\r\n            \r\n            if (!response.ok) throw new Error('Failed to add task');\r\n            \r\n            setNewTitle('');\r\n            setNewDescription('');\r\n            fetchTasks();\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n\r\n    const deleteTask = async (taskId: number) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/tasks/${taskId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            if (!response.ok) throw new Error('Failed to delete task');\r\n            setTasks(tasks.filter(task => task.taskid !== taskId));\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n\r\n    const toggleTaskCompletion = async (taskId: number) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/tasks/${taskId}/toggle`, {\r\n                method: 'PATCH'\r\n            });\r\n            if (!response.ok) throw new Error('Failed to toggle task completion');\r\n            fetchTasks(); // Refresh the task list after toggling\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const editTask = async (taskId: number) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/tasks/${taskId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ title: editedTitle, description: editedDescription })\r\n            });\r\n            if (!response.ok) throw new Error('Failed to update task');\r\n            setEditingTaskId(null); // Exit editing mode\r\n            fetchTasks(); // Refresh the task list after editing\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const startEditing = (task: { taskid: number; title: string; description: string }) => {\r\n        setEditingTaskId(task.taskid);\r\n        setEditedTitle(task.title);\r\n        setEditedDescription(task.description);\r\n    };\r\n\r\n\r\n    const cancelEdit = () => {\r\n        setEditingTaskId(null);\r\n        setEditedTitle('');\r\n        setEditedDescription('');\r\n    };\r\n\r\n\r\n    if (userId) {\r\n        return (\r\n            <div>\r\n                <h2>Your Tasks</h2>\r\n                <div>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Title\" \r\n                        value={newTitle} \r\n                        onChange={(e) => setNewTitle(e.target.value)}\r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Description\" \r\n                        value={newDescription} \r\n                        onChange={(e) => setNewDescription(e.target.value)}\r\n                    />\r\n                    <button onClick={addTask}>+</button>\r\n                </div>\r\n                <ul>\r\n                    {tasks.length > 0 ? (\r\n                        tasks.map(task => (\r\n                            <li key={task.taskid} style={{ marginBottom: '60px' }}>\r\n                                {editingTaskId === task.taskid ? (\r\n                                    <div>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            value={editedTitle} \r\n                                            onChange={(e) => setEditedTitle(e.target.value)} \r\n                                        />\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            value={editedDescription} \r\n                                            onChange={(e) => setEditedDescription(e.target.value)} \r\n                                        />\r\n                                        <button onClick={() => editTask(task.taskid)}>Confirm</button>\r\n                                        <button onClick={cancelEdit}>Cancel</button>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div>\r\n                                        <strong>{task.title}</strong>\r\n                                        <p>{task.description}</p>\r\n                                        <button onClick={() => toggleTaskCompletion(task.taskid)}>\r\n                                            {task.completed ? 'Undo' : 'Complete'}\r\n                                        </button>\r\n                                        <button onClick={() => startEditing(task)}>Edit</button>\r\n                                        <button onClick={() => deleteTask(task.taskid)}>Delete</button>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No tasks found.</p>\r\n                    )}\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Log In / Sign Up</h2>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Username\" \r\n                value={username} \r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <button onClick={() => handleAuth('login')}>Log In</button>\r\n            <button onClick={() => handleAuth('register')}>Sign Up</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}