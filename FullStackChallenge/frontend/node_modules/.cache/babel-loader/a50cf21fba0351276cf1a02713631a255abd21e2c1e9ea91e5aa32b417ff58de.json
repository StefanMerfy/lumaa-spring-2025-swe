{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Documents\\\\FullStackChallenge\\\\frontend\\\\src\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (userId) {\n      fetchTasks();\n    }\n  }, [userId]);\n  const handleAuth = async endpoint => {\n    try {\n      const response = await fetch(`http://localhost:3000/${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) throw new Error(`${endpoint} failed`);\n      const data = await response.json();\n      setUserId(data.userId);\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      console.log(\"Fetching tasks for user:\", userId);\n      const response = await fetch(`http://localhost:3000/tasks?userId=${userId}`);\n      console.log(\"Response status:\", response.status);\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n      setTasks(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          title: newTitle,\n          description: newDescription\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add task');\n      setNewTitle('');\n      setNewDescription('');\n      fetchTasks();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: newDescription,\n          onChange: e => setNewDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.title, \": \", task.description]\n        }, task.taskid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In / Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuth('login'),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuth('register'),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"2y9XG/73coeQPIiWaPnpRzFFCm8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","userId","setUserId","username","setUsername","password","setPassword","tasks","setTasks","newTitle","setNewTitle","newDescription","setNewDescription","error","setError","fetchTasks","handleAuth","endpoint","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","console","log","status","addTask","title","description","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","taskid","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Stefan/Documents/FullStackChallenge/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst App: React.FC = () => {\r\n    const [userId, setUserId] = useState<number | null>(null);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [tasks, setTasks] = useState<{ taskid: number; title: string; description: string; completed: boolean }[]>([]);\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [error, setError] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchTasks();\r\n        }\r\n    }, [userId]);\r\n\r\n    const handleAuth = async (endpoint: string) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/${endpoint}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password })\r\n            });\r\n            \r\n            if (!response.ok) throw new Error(`${endpoint} failed`);\r\n            \r\n            const data = await response.json();\r\n            setUserId(data.userId);\r\n            setError('');\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            console.log(\"Fetching tasks for user:\", userId);\r\n            const response = await fetch(`http://localhost:3000/tasks?userId=${userId}`);\r\n            console.log(\"Response status:\", response.status);\r\n            if (!response.ok) throw new Error('Failed to fetch tasks');\r\n            const data = await response.json();\r\n            console.log(\"Fetched tasks:\", data);\r\n            setTasks(data);\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    \r\n\r\n    const addTask = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/create', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userId, title: newTitle, description: newDescription })\r\n            });\r\n            \r\n            if (!response.ok) throw new Error('Failed to add task');\r\n            \r\n            setNewTitle('');\r\n            setNewDescription('');\r\n            fetchTasks();\r\n        } catch (err: any) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    if (userId) {\r\n        return (\r\n            <div>\r\n                <h2>Your Tasks</h2>\r\n                <div>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Title\" \r\n                        value={newTitle} \r\n                        onChange={(e) => setNewTitle(e.target.value)}\r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Description\" \r\n                        value={newDescription} \r\n                        onChange={(e) => setNewDescription(e.target.value)}\r\n                    />\r\n                    <button onClick={addTask}>+</button>\r\n                </div>\r\n                <ul>\r\n                    {tasks.map(task => (\r\n                        <li key={task.taskid}>{task.title}: {task.description}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Log In / Sign Up</h2>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Username\" \r\n                value={username} \r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <button onClick={() => handleAuth('login')}>Log In</button>\r\n            <button onClick={() => handleAuth('register')}>Sign Up</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}