{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Documents\\\\FullStackChallenge\\\\frontend\\\\src\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed. Please check your credentials.');\n      }\n      const data = await response.json();\n      setSuccessMessage(`Welcome back, ${data.username}!`);\n      setError('');\n      // Handle successful login (e.g., redirect, store token, etc.)\n    } catch (err) {\n      setError(err.message);\n      setSuccessMessage('');\n    }\n  };\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed. Please try again.');\n      }\n      const data = await response.json();\n      setSuccessMessage(`Registration successful! Welcome, ${data.username}!`);\n      setError('');\n      // Handle successful registration (e.g., redirect, auto-login, etc.)\n    } catch (err) {\n      setError(err.message);\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: 'auto',\n      padding: '20px',\n      border: '1px solid #ccc',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In / Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        width: '100%',\n        marginBottom: '10px',\n        padding: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        width: '100%',\n        marginBottom: '10px',\n        padding: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      style: {\n        marginRight: '10px'\n      },\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"KDxfsexOc+IvTm0nl9xoUSxphi4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","successMessage","setSuccessMessage","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","handleSignUp","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","marginBottom","color","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Stefan/Documents/FullStackChallenge/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Login failed. Please check your credentials.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setSuccessMessage(`Welcome back, ${data.username}!`);\r\n            setError('');\r\n            // Handle successful login (e.g., redirect, store token, etc.)\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setSuccessMessage('');\r\n        }\r\n    };\r\n\r\n    const handleSignUp = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Registration failed. Please try again.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setSuccessMessage(`Registration successful! Welcome, ${data.username}!`);\r\n            setError('');\r\n            // Handle successful registration (e.g., redirect, auto-login, etc.)\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setSuccessMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: '400px', margin: 'auto', padding: '20px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n            <h2>Log In / Sign Up</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                style={{ width: '100%', marginBottom: '10px', padding: '8px' }}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                style={{ width: '100%', marginBottom: '10px', padding: '8px' }}\r\n            />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n            <button onClick={handleLogin} style={{ marginRight: '10px' }}>Log In</button>\r\n            <button onClick={handleSignUp}>Sign Up</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}